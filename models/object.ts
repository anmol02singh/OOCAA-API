import mongoose from "mongoose";

const objectSchema = new mongoose.Schema({
    object: String,
    objectDesignator: String,
    catalogName: String,
    objectName: String,
    internationalDesignator: String,
    objectType: String,
    operatorOrganization: String,
    operatorContactPosition: String,
    operatorPhone: String, 
    operatorEmail: String,
    ephemerisName: String,
    covarianceMethod: String,
    maneuverable: String,
    referenceFrame: String,
    gravityModel: String,
    atmosphericModel: String,
    nBodyPerturbations: String,
    solarRadPressure: String,
    earthTides: String,
    inTrackThrust: String,
    commentCovarianceScaleFactor: String,
    commentExclusionVolumeRadius: String,
    commentApogee: String,
    commentPerigee: String,
    commentInclination: String,
    commentOperatorHardBodyRadius: String,
    commentScreeningDataSource: String,
    timeLastobStart: Date,
    timeLastobEnd: Date,
    recommendedOdSpan: Number,
    recommendedOdSpanUnit: String,
    actualOdSpan: Number,
    actualOdSpanUnit: String,
    obsAvailable: Number,
    obsUsed: Number,
    tracksAvailable: Number,
    tracksUsed: Number,
    residualsAccepted: Number,
    residualsAcceptedUnit: String,
    weightedRms: Number,
    areaPC: Number,
    areaPCUnit: String,
    cdAreaOverMass: Number,
    cdAreaOverMassUnit: String,
    crAreaOverMass: Number,
    crAreaOverMassUnit: String,
    thrustAcceleration: Number,
    thrustAccelerationUnit: String,
    sedr: Number,
    sedrUnit: String,
    position: {
        x: Number,
        y: Number,
        z: Number
    },
    velocity: {
        x_dot: Number,
        y_dot: Number,
        z_dot: Number
    },
    commentDcpDensityForecastUncertainty: String,
    commentDcpSensitivityVectorPosition: String,
    commentDcpSensitivityVectorVelocity: String,
    positionCovariance: {
        cr_r: Number,
        ct_r: Number,
        ct_t: Number,
        cn_r: Number,
        cn_t: Number,
        cn_n: Number
    },
    velocityCovariance: {
        crdot_r: Number,
        crdot_t: Number,
        crdot_n: Number,
        crdot_rdot: Number,
        ctdot_r: Number,
        ctdot_t: Number,
        ctdot_n: Number,
        ctdot_rdot: Number,
        ctdot_tdot: Number,
        cndot_r: Number,
        cndot_t: Number,
        cndot_n: Number,
        cndot_rdot: Number,
        cndot_tdot: Number,
        cndot_ndot: Number
    },
    dragCovariance: {
        cdrg_r: Number,
        cdrg_t: Number,
        cdrg_n: Number,
        cdrg_rdot: Number,
        cdrg_tdot: Number,
        cdrg_ndot: Number,
        cdrg_drg: Number
    },
    srpCovariance: {
        csrp_r: Number,
        csrp_t: Number,
        csrp_n: Number,
        csrp_rdot: Number,
        csrp_tdot: Number,
        csrp_ndot: Number,
        csrp_drg: Number,
        csrp_srp: Number
    }
});

export default objectSchema;